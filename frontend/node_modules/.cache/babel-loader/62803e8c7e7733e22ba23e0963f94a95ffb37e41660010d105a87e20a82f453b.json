{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anomalija\\\\mealprep-master\\\\frontend\\\\src\\\\pages\\\\RecipeLibrary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeLibrary = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]); // Ensure it's an array by default\n  const [loading, setLoading] = useState(true); // Add a loading state\n  const [error, setError] = useState(null); // Add an error state\n\n  useEffect(() => {\n    fetch('http://localhost:5000/api/recipes') // Replace with your backend API\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch recipes');\n      }\n      return response.json();\n    }).then(data => {\n      setRecipes(data); // Expecting an array here\n      setLoading(false);\n    }).catch(err => {\n      setError(err.message); // Catch errors\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading recipes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this); // Show loading state\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this); // Show error state\n  }\n  if (!Array.isArray(recipes)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recipes found or invalid data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this); // Handle non-array responses\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mt-3\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, recipe.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeLibrary, \"vfyQ/3ItuvMNLtBmIc7FD1JrFwc=\");\n_c = RecipeLibrary;\nexport default RecipeLibrary;\nvar _c;\n$RefreshReg$(_c, \"RecipeLibrary\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RecipeLibrary","_s","recipes","setRecipes","loading","setLoading","error","setError","fetch","then","response","ok","Error","json","data","catch","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","className","map","recipe","name","description","id","_c","$RefreshReg$"],"sources":["C:/Users/Anomalija/mealprep-master/frontend/src/pages/RecipeLibrary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst RecipeLibrary = () => {\r\n  const [recipes, setRecipes] = useState([]); // Ensure it's an array by default\r\n  const [loading, setLoading] = useState(true); // Add a loading state\r\n  const [error, setError] = useState(null); // Add an error state\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/recipes') // Replace with your backend API\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch recipes');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setRecipes(data); // Expecting an array here\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message); // Catch errors\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Loading recipes...</p>; // Show loading state\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>; // Show error state\r\n  }\r\n\r\n  if (!Array.isArray(recipes)) {\r\n    return <p>No recipes found or invalid data.</p>; // Handle non-array responses\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Recipe Library</h1>\r\n      <ul className=\"list-group mt-3\">\r\n        {recipes.map((recipe) => (\r\n          <li key={recipe.id} className=\"list-group-item\">\r\n            <h5>{recipe.name}</h5>\r\n            <p>{recipe.description}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeLibrary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}